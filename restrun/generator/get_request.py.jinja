{%- set request_name = method|capitalize + client_prefix|capitalize -%}
{%- set request_class = request_name + "Request" -%}
{%- set query_class = request_name + "QueryParameters" -%}
{%- set response_class = request_name + "Response" -%}
{{ auto_generated_doc_comment }}
from typing import Self, TypedDict
import pydantic

from restrun.core.client import RestrunMockClient
from restrun.core.resource import GetRequest
from restrun.core.model import ExtraForbidModel


{% if resouce.has_query %}
{% if config.schema_type == "typed_dict" %}
class {{ query_class }}(TypedDict):
    pass
{% elif config.schema_type == "pydantic" %}
class {{ query_class }}(pydantic.BaseModel):
    pass

class _Query(TypedDict):
    pass
{% endif %}
{% endif %}


class {{ response_class }}(ExtraForbidModel):
    pass


class {{ request_class }}(GetRequest):
    def get(
        self,
{% if resouce.has_query %}
        query: {{ query_class }},
{% endif %}
    ) -> {{ response_class }}:
        return self._client.get(
            self._url,
            response_body_type={{ response_class }},
        )
