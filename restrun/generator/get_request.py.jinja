{%- set request_name = method|capitalize + client_prefix|capitalize -%}
{%- set request_class = request_name + "Request" -%}
{%- set query_class = request_name + "QueryParameters" -%}
{%- set response_class = request_name + "Response" -%}
{{ auto_generated_doc_comment }}
from typing import Self, TypedDict, NotRequired
import pydantic

from restrun.core.client import RestrunMockClient
from restrun.core.resource import GetRequest
from restrun.core.model import ExtraForbidModel, Model

{% if request.query_parameters %}
class {{ request.class_name }}QueryParameters(TypedDict):
{% for name, query in request.query_parameters %}
    {{ name }}: {{ query.typed_dict_field }}
{% endfor %}
{% endif %}

{% if request.request_json_body %}
class {{ request.class_name }}RequestBody(TypedDict):
{% if request.request_json_body.description %}
    """
    {{ request.request_json_body.description | indent(4) }}
    """
    pass

{% endif %}

class Get{{ request.class_name }}(GetRequest):
    def get(
        self,
{% if request.path_parameters %}
        query: {{ query_class }},
{% endif %}
    ) -> {{ response_class }}:
{% if request.summary_and_description %}
        """
        {{ request.summary_and_description | indent(8) }}
        """
{% endif %}
        return self._client.get(
            self._url,
            response_body_type={{ response_class }},
        )
