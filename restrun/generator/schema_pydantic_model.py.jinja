#
# Code generated by restrun "{{ restrun.version }}".
#
# Removing this comment from this file will exclude it from automatic generation target
# and it will not be updated, unless the file contents are empty.
# If you wish to make special modifications to the auto-generated code,
# please remove this comment.
#
# For more information about restrun,
# please refer to https://github.com/yassun7010/restrun .
#
import pydantic
import typing
from restrun.core.model import ExtraForbidModel, Model
{%- for import_module in schema.import_field_types %}
{{ import_module }}
{% endfor %}

{% if schema.type == "object" %}
{% set data_type = schema.data_type %}
class {{ data_type.class_name }}(
{%- if data_type.additional_properties %}
    Model
{%- else %}
    ExtraForbidModel
{%- endif %}
):
{%- if data_type is not none and data_type.description is not none %}
    """
    {{ data_type.title|indent(4) }}

    {{ data_type.description|indent(4) }}
    """

{%- elif data_type.title is not none %}
    """
    {{ data_type.title|indent(4) }}
    """

{%- elif data_type.description is not none %}
    """
    {{ data_type.description|indent(4) }}
    """

{% endif %}
{% for name, property in data_type.properties.items() %}
    {{ name }}: typing.Annotated[
        {{ property.data_type }},
        pydantic.Field(
{%- if property.title is not none %}
            title="""
                {{ property.title|indent(16) }}
                """,
{%- endif %}
{%- if property.description is not none %}
            description="""
                {{ property.description|indent(16) }}
                """,
{%- endif %}
{%- if property.default is not none %}
            default={{ property.default }},
{%- endif %}
        )
    ]
{% endfor %}
{% endif %}
