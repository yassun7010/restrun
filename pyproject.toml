[tool.poetry]
name = "restrun"
version = "0.1.0"
description = ""
authors = ["yassun7010 <yassun7010@outlook.com>"]
readme = "README.md"

[tool.poetry.scripts]
restrun = "restrun.__main__:main"

[tool.taskipy.tasks]
test = "pytest"
format = "isort restrun && black restrun"
lint = "pyright restrun/** tests/** examples/**"
schema = "python scripts/generate_config_jsonschema.py > schemas/config.schema.json"
examples = "sh scripts/execute_examples.sh"
docs = "mkdocs serve"

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.2.1"
typer = { extras = ["all"], version = "^0.9.0" }
jinja2 = "^3.1.2"
ruff = "^0.0.286"
black = "^23.9.1"
authlib = "^1.2.1"
httpx = "^0.25.0"
pyyaml = "^6.0.1"
rich-argparse = "^1.3.0"
datamodel-code-generator = { extras = ["http"], version = "^0.21.4" }
openapi-pydantic = "^0.3.2"
pyhumps = "^3.8.0"
isort = "^5.12.0"
prompt-toolkit = "^3.0.39"

[tool.poetry.group.dev.dependencies]
ipython = "^8.14.0"
pytest = "^7.4.0"
pyright = "^1.1.324"
taskipy = "^1.12.0"
mkdocs-material = "^9.4.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py310']

[tool.pyright]
exclude = ["**/__pycache__"]
reportPrivateImportUsage = "none"
reportUnusedImport = true

[tool.ruff]
[tool.ruff.isort]
lines-between-types = 1
lines-after-imports = 2

[tool.isort]
profile = "black"
combine_as_imports = true
lines_between_types = 1
lines_after_imports = 2
